---
// Component for a single project

import type {CollectionEntry } from 'astro:content';
interface Props {
	project: CollectionEntry<'project'>;
}

const { project } = Astro.props;
const { Content } = await project.render();
---

<div class="project">
    <div>
        <h1>{project.data.name} - <a href={`/projects/year/${project.data.year}`}>{project.data.year}</a></h1>
        <h3>{project.data.tagline}</h3>
        { project.data.links && (
        <div>
            { project.data.links.github && (<a href={project.data.links.github}>git</a>) }
            { project.data.links.demo && (<a href={project.data.links.demo}>demo</a>) }
            { project.data.links.homepage && (<a href={project.data.links.homepage}>homepage</a>) }
        </div>
        )}
    </div>
    <div>
        <Content />
    </div>
    {
        project.data.image && (<div>
            <img src={project.data.image}>
        </div>)
    }
    {
        project.data.demo && (<div>
            <iframe class="showcase" width="640" height="360" src={project.data.demo + "?mute=1"}></iframe>
        </div>)
    }
    <div>
        <p class="link-list">
            languages:
            {
                project.data.languages.map(language => (
                    <span><a href={`/projects/lang/${language.toLowerCase()}`}>{language}</a></span>
                ))
            }
        </p>
        <p class="link-list">
            tags:
            {
                project.data.tags.map(tag => (
                    <span><a href={`/projects/tag/${tag.toLowerCase()}`}>{tag}</a></span>
                ))
            }
        </p>
    </div>
</div>
<style>
	.link-list span:not(:last-child)::after {
	   content: ", ";
	}
</style>
