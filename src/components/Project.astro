---
// Component for a single project

import type { CollectionEntry } from "astro:content";
interface Props {
    project: CollectionEntry<"projects">;
}

const { project } = Astro.props;
const { Content } = await project.render();
---

<div class="project">
    <div>
        <h1>
            {project.data.name}
        </h1>
        <h3>{project.data.tagline}</h3>
        <p>
            year:
            <a href={`/projects/year/${project.data.year}`}
                >{project.data.year}</a
            >,
            {
                project.data.links && (
                    <span class="link-list">
                        links:
                        {Object.entries(project.data.links).map(
                            ([key, value]) => (
                                <span>
                                    <a href={value}>{key}</a>
                                </span>
                            ),
                        )}
                    </span>
                )
            }
        </p>
    </div>
    <div class="content">
        <Content />
    </div>
    <div>
        <p class="link-list">
            languages:
            {
                project.data.languages.map((language) => (
                    <span>
                        <a href={`/projects/lang/${language.toLowerCase()}`}>
                            {language}
                        </a>
                    </span>
                ))
            }
        </p>
        <p class="link-list">
            tags:
            {
                project.data.tags.map((tag) => (
                    <span>
                        <a href={`/projects/tag/${tag.toLowerCase()}`}>{tag}</a>
                    </span>
                ))
            }
        </p>
    </div>
</div>
<style>
    .content {
        margin: 2rem 0;
    }

    .link-list span:not(:last-child)::after {
        content: ", ";
    }
</style>
