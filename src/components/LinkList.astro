---
interface Props {
    values: string[];
    prefix?: string;
    urls?: string[];
    name?: string;
}

const { values, prefix, urls, name } = Astro.props;

if (urls && urls.length !== values.length) {
    throw Error("URL count does not match value count");
}

let links = urls
    ? urls.map((url, i) => {
          return { name: values[i], url };
      })
    : values.map((value) => {
          return { name: value, url: value.toLowerCase() };
      });

if (prefix) {
    links = links.map((link) => {
        link.url = prefix + link.url;
        return link;
    });
}
---

<p class="link-list">
    {name && `${name}: `}
    {
        links.map(({ name, url }) => (
            <span>
                <a href={url}>{name}</a>
            </span>
        ))
    }
</p>
<style>
    .link-list span:not(:last-child)::after {
        content: ", ";
    }
</style>
